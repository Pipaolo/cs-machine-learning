import { useDisclosure } from "@chakra-ui/react";
import { type NextPage } from "next";
import Head from "next/head";
import { useState } from "react";

import { GenericLayout } from "~/components/layout/generic";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "~/components/ui/card";
import { DiabeticPredictionResults } from "~/features/problem_set_4/components";
import { DiabeticForm } from "~/features/problem_set_4/components/DiabeticForm";
import { type DiabeticFormSchema } from "~/features/problem_set_4/types";

import { api } from "~/utils/api";

const DiabeticPredictionPage: NextPage = () => {
  const minMax = api.data.minMax.useQuery({
    fileName: "pbs4.csv",
  });
  const resultsDisclosure = useDisclosure();
  const diabeticPrediction = api.problemset4.diabeticPrediction.useMutation();

  const onSubmit = async (data: DiabeticFormSchema) => {
    resultsDisclosure.onClose();
    await diabeticPrediction.mutateAsync(data, {
      onSuccess: (data) => {
        resultsDisclosure.onOpen();
      },
    });
  };

  const renderContent = () => {
    if (minMax.isLoading) return <div></div>;

    return (
      <>
        <Card className="w-full max-w-md animate-in fade-in zoom-in-0 duration-500 ease-in-out">
          <CardHeader>
            <CardTitle>Diabetic Prediction</CardTitle>
            <CardDescription>Problem Set 4</CardDescription>
          </CardHeader>
          <CardContent>
            <DiabeticForm
              onSubmit={onSubmit}
              minMax={minMax.data}
              isLoading={diabeticPrediction.isLoading}
            />
            {diabeticPrediction.data && (
              <DiabeticPredictionResults
                results={diabeticPrediction.data!}
                formData={diabeticPrediction.variables!}
                {...resultsDisclosure}
              />
            )}
          </CardContent>
        </Card>
      </>
    );
  };

  return (
    <>
      <Head>
        <title>Problem Set 4 - Diabetic Prediction</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <GenericLayout>
        <div className="m-auto flex h-full w-full flex-col items-center  justify-center space-y-4 p-4">
          {renderContent()}
        </div>
      </GenericLayout>
    </>
  );
};

export default DiabeticPredictionPage;
